import android.os.Bundle
import android.view.View
import android.webkit.WebSettings
import android.webkit.WebView
import androidx.appcompat.app.AppCompatActivity
import com.google.android.exoplayer2.ExoPlayer
import com.google.android.exoplayer2.ui.PlayerView

class PlayerActivity : AppCompatActivity() {

    private lateinit var playerView: PlayerView
    private lateinit var webView: WebView
    private lateinit var exoPlayer: ExoPlayer

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main) // Asegúrate de usar el archivo XML correcto

        // Inicializar PlayerView y WebView
        playerView = findViewById(R.id.player_view)
        webView = findViewById(R.id.webview)

        // Configuración de ExoPlayer
        exoPlayer = ExoPlayer.Builder(this).build()
        playerView.player = exoPlayer

        val videoUrl = "https://path/to/video.mp4" // URL del video
        exoPlayer.setMediaItem(MediaItem.fromUri(videoUrl))
        exoPlayer.prepare()
        exoPlayer.playWhenReady = true

        // Configuración de WebView
        val webSettings: WebSettings = webView.settings
        webSettings.javaScriptEnabled = true // Habilitar JavaScript
        webView.loadUrl("https://www.youtube.com") // Cargar una página web con videos

        // Mostrar PlayerView al inicio
        showPlayerView()

        // Alternar entre WebView y PlayerView con un botón o lógica
        findViewById<View>(R.id.button_toggle).setOnClickListener {
            if (playerView.visibility == View.VISIBLE) {
                showWebView()
            } else {
                showPlayerView()
            }
        }
    }

    // Mostrar PlayerView y ocultar WebView
    private fun showPlayerView() {
        playerView.visibility = View.VISIBLE
        webView.visibility = View.GONE
    }

    // Mostrar WebView y ocultar PlayerView
    private fun showWebView() {
        webView.visibility = View.VISIBLE
        playerView.visibility = View.GONE
        exoPlayer.pause() // Pausar la reproducción en ExoPlayer
    }

    override fun onStop() {
        super.onStop()
        exoPlayer.release() // Liberar recursos al detener la actividad
    }
}
